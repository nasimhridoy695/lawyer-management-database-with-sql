
-- SHOWING THE DISCOUNT ON FEES OF APPOINTMENT ON EID DAY USING PL/SQL
SET SERVEROUTPUT ON
DECLARE
    APPOINTMENT_FEE LAWYER.FEE%TYPE;
    DISCOUNTED_PRICE LAWYER.FEE%TYPE;
    APP_ID APPOINTMENT.APPOINTMENT_ID%TYPE;
BEGIN
    APP_ID := 13;
    SELECT LAWYER.FEE INTO APPOINTMENT_FEE FROM APPOINTMENT NATURAL JOIN LAWYER WHERE APPOINTMENT.APPOINTMENT_ID = APP_ID;
    IF(APPOINTMENT_FEE<1000) THEN DISCOUNTED_PRICE := APPOINTMENT_FEE;
    ELSE DISCOUNTED_PRICE := APPOINTMENT_FEE - (APPOINTMENT_FEE*0.5);
    END IF;
    DBMS_OUTPUT.PUT_LINE('FOR APPOINTMENT: '||APP_ID||' APPOINTMENT FEE: '||APPOINTMENT_FEE||' DISCOUNTED FEE: '||DISCOUNTED_PRICE);
    EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/


--SHOWING DETAILS OF CRIMINAL LAWYER USING CURSOR
SET SERVEROUTPUT ON
DECLARE
    CURSOR CRIMINAL_CURSOR IS SELECT NAME, COURT, FEE FROM LAWYER WHERE CATEGORY = 'CRIMINAL';
    ACCESS CRIMINAL_CURSOR%ROWTYPE;
BEGIN
    OPEN CRIMINAL_CURSOR;
    LOOP
        FETCH CRIMINAL_CURSOR INTO ACCESS;
        EXIT WHEN CRIMINAL_CURSOR%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('LAWYER NAME: '|| ACCESS.NAME || ' COURT: '|| ACCESS.COURT || ' FEE: '|| ACCESS.FEE);
    END LOOP;
    CLOSE CRIMINAL_CURSOR;
END;
/

--Insertion into APPOINTMENT table using PROCEDURE

CREATE OR REPLACE PROCEDURE InsertIntoAppointment(APPID APPOINTMENT.APPOINTMENT_ID%TYPE, LWYR LAWYER.LAWYER_ID%TYPE, CLNT CLIENT.CLIENT_ID%TYPE, APPDATE APPOINTMENT.APPOINTMENT_DATE%type) IS
BEGIN
	INSERT INTO APPOINTMENT VALUES(APPID, LWYR , CLNT, APPDATE);
	commit;
END InsertIntoAppointment;
/


--Calling the PROCEDURE for Inserting into APPOINTMENT

SET SERVEROUTPUT ON
BEGIN
	InsertIntoAppointment(21,105,1003,'25-JUL-22');
END;
/

SELECT * FROM APPOINTMENT;




-- FINDING TOTAL NUMBER OF APPOINTMENT ON A PARTICULAR DATE USING FUNCTION

CREATE OR REPLACE FUNCTION TOTALAPP(APP_DATE APPOINTMENT.APPOINTMENT_DATE%type) RETURN NUMBER IS
	APP_NO APPOINTMENT.APPOINTMENT_ID%type;
BEGIN
	SELECT COUNT(APPOINTMENT_ID) INTO APP_NO FROM APPOINTMENT WHERE APPOINTMENT_DATE=APP_DATE;
	RETURN APP_NO;
END TOTALAPP;
/


--Calling the FUNCTION for CALCULATING TOTAL NUMBER OF APPOINTMENT

SET SERVEROUTPUT ON
DECLARE
    APPOINT_DATE APPOINTMENT.APPOINTMENT_DATE%TYPE;
BEGIN
    APPOINT_DATE := '22-AUG-2022';
	DBMS_OUTPUT.PUT_LINE('TOTAL APPOINTMENT ON ' ||APPOINT_DATE ||' is : '||TOTALAPP(APPOINT_DATE));
END;
/

